name: Publish Docker images
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build and push"
        required: true

jobs:
  musl:
    runs-on: ubuntu-22.04
    steps:
      - name: Determine release version
        run: |
          set -euo pipefail

          release_tag="${{ github.event.inputs.tag || github.event.release.tag_name }}"
          release_version=$(tr -d 'v' <<< $release_tag)
          echo "Tag: $release_tag"
          echo "Version: $release_version"
          echo "release_tag=$release_tag" >> $GITHUB_ENV
          echo "release_version=$release_version" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.release_tag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # v1.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # v1.6.0
      - name: Log into DockerHub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Quay.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Generate image tags
        id: generate-image-tags
        run: |
          set -euo pipefail

          image_tags="rbspy/rbspy:${{ env.release_version }}-musl,quay.io/rbspy/rbspy:${{ env.release_version }}-musl"
          echo "image_tags=$image_tags" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          build-args: VERSION=${{ env.release_version }}
          context: .
          file: ci/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.image_tags }}
          target: musl

  gnu:
    runs-on: ubuntu-22.04
    steps:
      - name: Determine release version
        run: |
          set -euo pipefail

          release_tag="${{ github.event.inputs.tag || github.event.release.tag_name }}"
          release_version=$(tr -d 'v' <<< $release_tag)
          echo "Tag: $release_tag"
          echo "Version: $release_version"
          echo "release_tag=$release_tag" >> $GITHUB_ENV
          echo "release_version=$release_version" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.release_tag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # v1.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # v1.6.0
      - name: Log into DockerHub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Quay.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Generate image tags
        id: generate-image-tags
        run: |
          set -euo pipefail

          image_tags="rbspy/rbspy:${{ env.release_version }}-gnu,quay.io/rbspy/rbspy:${{ env.release_version }}-gnu"
          echo "image_tags=$image_tags" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          build-args: VERSION=${{ env.release_version }}
          context: .
          file: ci/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.image_tags }}
          target: gnu

  readme:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag || github.event.release.tag_name }}
      - name: Sync README to Docker Hub
        uses: ms-jpq/sync-dockerhub-readme@0c8d5cd2a45de29ab6d890d78ee19a332be3503e # v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: rbspy/rbspy
          readme: "./README.md"
